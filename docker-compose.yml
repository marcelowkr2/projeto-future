name: futurecyberSec

networks:
  futurecybersec_network:
    driver: bridge

services:
  frontend:
    container_name: futurecybersec_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: npm run dev
    restart: always
    networks:
      - futurecybersec_network

  backend:
    container_name: futurecybersec_backend
    build:
      context: .
      dockerfile: infra/docker/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    command: >
      sh -c "sleep 10 &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - ENV=development
      - CHOKIDAR_USEPOLLING=true
      - POSTGRES_DB=cybersecurity_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=dU2q4Lpm12@#
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      - db
    restart: always
    networks:
      - futurecybersec_network

  db:
    image: postgres:latest
    container_name: futurecybersec_db
    restart: always
    environment:
      POSTGRES_DB: cybersecurity_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dU2q4Lpm12@#$
      POSTGRES_HOST: db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - futurecybersec_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d cybersecurity_db" ]
      interval: 10s
      retries: 5
      timeout: 5s

volumes:
  db_data:
    driver: local
